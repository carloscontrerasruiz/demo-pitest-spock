//buildscript {
//	repositories {
//		mavenCentral()
//	}
//
//	dependencies {
//		classpath "info.solidsoft.gradle.pitest:gradle-pitest-plugin:${pitestLibraryVersion}"
//	}
//}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'info.solidsoft.pitest' version "${pitestLibraryVersion}"
    //Adding this plugin is not necessary adding the classpath
    id 'groovy'
}

//apply plugin: 'info.solidsoft.pitest' //necesario si se usa el approach the build script

group = 'com.github.carloscontrerasruiz'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10'

    compile "org.codehaus.groovy:groovy-all:${groovyAll}"


    testCompile "org.codehaus.groovy:groovy-all:${groovyAll}"
    testCompile "org.spockframework:spock-core:${spockFramework}"
    testCompile group: 'org.spockframework', name: 'spock-spring', version: "${spockFramework}"
    testCompile "com.athaydes:spock-reports:${spockReports}"
}

test {
    useJUnitPlatform()
    systemProperty 'com.athaydes.spockframework.report.showCodeBlocks', true
}

sourceSets {
    test {
        groovy {
            srcDirs = ['src/test/groovy']
        }
    }
}

build.dependsOn 'pitest'

pitest {
    targetClasses = ['com.github.carloscontrerasruiz.demopitestspock.*']  //by default "${project.group}.*"
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 10
    targetTests = ['com.github.carloscontrerasruiz.demopitestspock.*']
    excludedClasses = [
            'com.github.carloscontrerasruiz.demopitestspock.properties.*',
            'com.github.carloscontrerasruiz.demopitestspock.controller.*',
            'com.github.carloscontrerasruiz.demopitestspock.entity.*',
    ]

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        useClasspathFile = true
    }

    junit5PluginVersion = "${jUnitPlugin}"
    //pitestVersion = "${pitestLibraryVersion}" //not needed when a default PIT version should be used
}
